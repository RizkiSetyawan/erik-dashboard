{"ast":null,"code":"import _objectSpread from \"/Users/rizki/Downloads/dasboard-material/new-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/rizki/Downloads/dasboard-material/new-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/rizki/Downloads/dasboard-material/new-dashboard/src/views/Dashboard/components/DragComponent/index.jsx\";\nimport React, { Component } from 'react'; // Externals\n\nimport { useDrag } from 'react-dnd';\nconst style = {\n  border: '1px dashed gray',\n  backgroundColor: 'white',\n  padding: '0.5rem 1rem',\n  marginRight: '1.5rem',\n  marginBottom: '1.5rem',\n  cursor: 'move',\n  float: 'left'\n};\n\nconst DragComponent = props => {\n  const name = props.name,\n        type = props.type,\n        isDropped = props.isDropped;\n\n  const _useDrag = useDrag({\n    item: {\n      name,\n      type\n    },\n    collect: monitor => ({\n      opacity: monitor.isDragging() ? 0.4 : 1\n    })\n  }),\n        _useDrag2 = _slicedToArray(_useDrag, 2),\n        opacity = _useDrag2[0].opacity,\n        drag = _useDrag2[1];\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, !isDropped && React.createElement(\"div\", {\n    ref: drag,\n    style: _objectSpread({}, style, {\n      opacity\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, isDropped ? React.createElement(\"s\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, name) : name));\n};\n\nexport default DragComponent;","map":{"version":3,"sources":["/Users/rizki/Downloads/dasboard-material/new-dashboard/src/views/Dashboard/components/DragComponent/index.jsx"],"names":["React","Component","useDrag","style","border","backgroundColor","padding","marginRight","marginBottom","cursor","float","DragComponent","props","name","type","isDropped","item","collect","monitor","opacity","isDragging","drag"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CAEA;;AACA,SAASC,OAAT,QAAwB,WAAxB;AAEA,MAAMC,KAAK,GAAG;AACZC,EAAAA,MAAM,EAAE,iBADI;AAEZC,EAAAA,eAAe,EAAE,OAFL;AAGZC,EAAAA,OAAO,EAAE,aAHG;AAIZC,EAAAA,WAAW,EAAE,QAJD;AAKZC,EAAAA,YAAY,EAAE,QALF;AAMZC,EAAAA,MAAM,EAAE,MANI;AAOZC,EAAAA,KAAK,EAAE;AAPK,CAAd;;AAUA,MAAMC,aAAa,GAAGC,KAAK,IAAI;AAAA,QACrBC,IADqB,GACKD,KADL,CACrBC,IADqB;AAAA,QACfC,IADe,GACKF,KADL,CACfE,IADe;AAAA,QACTC,SADS,GACKH,KADL,CACTG,SADS;;AAAA,mBAGDb,OAAO,CAAC;AAClCc,IAAAA,IAAI,EAAE;AAAEH,MAAAA,IAAF;AAAQC,MAAAA;AAAR,KAD4B;AAElCG,IAAAA,OAAO,EAAEC,OAAO,KAAK;AACnBC,MAAAA,OAAO,EAAED,OAAO,CAACE,UAAR,KAAuB,GAAvB,GAA6B;AADnB,KAAL;AAFkB,GAAD,CAHN;AAAA;AAAA,QAGpBD,OAHoB,gBAGpBA,OAHoB;AAAA,QAGTE,IAHS;;AAU7B,SACM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAACN,SAAD,IACC;AAAK,IAAA,GAAG,EAAEM,IAAV;AAAgB,IAAA,KAAK,oBAAOlB,KAAP;AAAcgB,MAAAA;AAAd,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,SAAS,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIF,IAAJ,CAAH,GAAmBA,IAD/B,CAFJ,CADN;AASD,CAnBD;;AAqBA,eAAeF,aAAf","sourcesContent":["import React, { Component } from 'react';\n\n// Externals\nimport { useDrag } from 'react-dnd';\n\nconst style = {\n  border: '1px dashed gray',\n  backgroundColor: 'white',\n  padding: '0.5rem 1rem',\n  marginRight: '1.5rem',\n  marginBottom: '1.5rem',\n  cursor: 'move',\n  float: 'left'\n};\n\nconst DragComponent = props => {\n  const { name, type, isDropped } = props;\n\n  const [{ opacity }, drag] = useDrag({\n    item: { name, type },\n    collect: monitor => ({\n      opacity: monitor.isDragging() ? 0.4 : 1\n    })\n  });\n\n  return (\n        <div>\n          {!isDropped && (\n            <div ref={drag} style={{ ...style, opacity }}>\n              {isDropped ? <s>{name}</s> : name}\n            </div>\n          )}\n        </div>\n  );\n};\n\nexport default DragComponent\n"]},"metadata":{},"sourceType":"module"}