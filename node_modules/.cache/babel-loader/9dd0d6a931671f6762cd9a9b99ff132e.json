{"ast":null,"code":"import _classCallCheck from \"/Users/rizki/Documents/work/dashboard-erik/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/rizki/Documents/work/dashboard-erik/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/rizki/Documents/work/dashboard-erik/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/rizki/Documents/work/dashboard-erik/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/rizki/Documents/work/dashboard-erik/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/rizki/Documents/work/dashboard-erik/src/layouts/Dashboard/components/Topbar/components/NotificationList/index.jsx\";\nimport React, { Component, Fragment } from 'react';\nimport { Link } from 'react-router-dom'; // Externals\n\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames'; // Material helpers\n\nimport { withStyles } from '@material-ui/core/styles'; // Material components\n\nimport Button from '@material-ui/core/Button';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\nimport DollarIcon from '@material-ui/icons/AttachMoneyOutlined';\nimport PeopleIcon from '@material-ui/icons/PeopleOutlineOutlined';\nimport CodeIcon from '@material-ui/icons/CodeOutlined';\nimport ApplicationIcon from '@material-ui/icons/DashboardOutlined'; // Component styles\n\nimport styles from './styles';\nvar icons = {\n  order: {\n    icon: React.createElement(DollarIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }),\n    color: 'blue'\n  },\n  user: {\n    icon: React.createElement(PeopleIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }),\n    color: 'red'\n  },\n  product: {\n    icon: React.createElement(ApplicationIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }),\n    color: 'green'\n  },\n  feature: {\n    icon: React.createElement(CodeIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }),\n    color: 'purple'\n  }\n};\n\nvar NotificationList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(NotificationList, _Component);\n\n  function NotificationList() {\n    _classCallCheck(this, NotificationList);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(NotificationList).apply(this, arguments));\n  }\n\n  _createClass(NotificationList, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          className = _this$props.className,\n          classes = _this$props.classes,\n          notifications = _this$props.notifications,\n          onSelect = _this$props.onSelect;\n      var rootClassName = classNames(classes.root, className);\n      return React.createElement(\"div\", {\n        className: rootClassName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, notifications.length > 0 ? React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes.header,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"h6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, \"User Notifications\"), React.createElement(Typography, {\n        className: classes.subtitle,\n        variant: \"body2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, notifications.length, \" new notifications\")), React.createElement(\"div\", {\n        className: classes.content,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(List, {\n        component: \"div\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, notifications.map(function (notification) {\n        return React.createElement(Link, {\n          key: notification.id,\n          to: \"#\" // to={notification.to}\n          ,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }, React.createElement(ListItem, {\n          className: classes.listItem,\n          component: \"div\",\n          onClick: onSelect,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        }, React.createElement(ListItemIcon, {\n          className: classes.listItemIcon,\n          style: {\n            color: icons[notification.type].color\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        }, icons[notification.type].icon), React.createElement(ListItemText, {\n          classes: {\n            secondary: classes.listItemTextSecondary\n          },\n          primary: notification.title,\n          secondary: notification.when,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86\n          },\n          __self: this\n        }), React.createElement(ArrowForwardIosIcon, {\n          className: classes.arrowForward,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        })), React.createElement(Divider, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        }));\n      })), React.createElement(\"div\", {\n        className: classes.footer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"primary\",\n        component: Link,\n        size: \"small\",\n        to: \"/notifications\",\n        variant: \"contained\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, \"See all\")))) : React.createElement(\"div\", {\n        className: classes.empty,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes.emptyImageWrapper,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        alt: \"Empty list\",\n        className: classes.emptyImage,\n        src: \"/images/empty.png\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      })), React.createElement(Typography, {\n        variant: \"h4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, \"There's nothing here...\")));\n    }\n  }]);\n\n  return NotificationList;\n}(Component);\n\nNotificationList.propTypes = {\n  className: PropTypes.string,\n  classes: PropTypes.object.isRequired,\n  notifications: PropTypes.array.isRequired,\n  onSelect: PropTypes.func\n};\nNotificationList.defaultProps = {\n  notifications: [],\n  onSelect: function onSelect() {}\n};\nexport default withStyles(styles)(NotificationList);","map":{"version":3,"sources":["/Users/rizki/Documents/work/dashboard-erik/src/layouts/Dashboard/components/Topbar/components/NotificationList/index.jsx"],"names":["React","Component","Fragment","Link","PropTypes","classNames","withStyles","Button","Divider","List","ListItem","ListItemIcon","ListItemText","Typography","ArrowForwardIosIcon","DollarIcon","PeopleIcon","CodeIcon","ApplicationIcon","styles","icons","order","icon","color","user","product","feature","NotificationList","props","className","classes","notifications","onSelect","rootClassName","root","length","header","subtitle","content","map","notification","id","listItem","listItemIcon","type","secondary","listItemTextSecondary","title","when","arrowForward","footer","empty","emptyImageWrapper","emptyImage","propTypes","string","object","isRequired","array","func","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport { Link } from 'react-router-dom';\n\n// Externals\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\n// Material helpers\nimport { withStyles } from '@material-ui/core/styles';\n\n// Material components\nimport Button from '@material-ui/core/Button';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\n\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\nimport DollarIcon from '@material-ui/icons/AttachMoneyOutlined';\nimport PeopleIcon from '@material-ui/icons/PeopleOutlineOutlined';\nimport CodeIcon from '@material-ui/icons/CodeOutlined';\nimport ApplicationIcon from '@material-ui/icons/DashboardOutlined';\n\n// Component styles\nimport styles from './styles';\n\nconst icons = {\n  order: {\n    icon: <DollarIcon />,\n    color: 'blue'\n  },\n  user: {\n    icon: <PeopleIcon />,\n    color: 'red'\n  },\n  product: {\n    icon: <ApplicationIcon />,\n    color: 'green'\n  },\n  feature: {\n    icon: <CodeIcon />,\n    color: 'purple'\n  }\n};\n\nclass NotificationList extends Component {\n  render() {\n    const { className, classes, notifications, onSelect } = this.props;\n\n    const rootClassName = classNames(classes.root, className);\n\n    return (\n      <div className={rootClassName}>\n        {notifications.length > 0 ? (\n          <Fragment>\n            <div className={classes.header}>\n              <Typography variant=\"h6\">User Notifications</Typography>\n              <Typography\n                className={classes.subtitle}\n                variant=\"body2\"\n              >\n                {notifications.length} new notifications\n              </Typography>\n            </div>\n            <div className={classes.content}>\n              <List component=\"div\">\n                {notifications.map(notification => (\n                  <Link\n                    key={notification.id}\n                    to=\"#\"\n                    // to={notification.to}\n                  >\n                    <ListItem\n                      className={classes.listItem}\n                      component=\"div\"\n                      onClick={onSelect}\n                    >\n                      <ListItemIcon\n                        className={classes.listItemIcon}\n                        style={{ color: icons[notification.type].color }}\n                      >\n                        {icons[notification.type].icon}\n                      </ListItemIcon>\n                      <ListItemText\n                        classes={{ secondary: classes.listItemTextSecondary }}\n                        primary={notification.title}\n                        secondary={notification.when}\n                      />\n                      <ArrowForwardIosIcon className={classes.arrowForward} />\n                    </ListItem>\n                    <Divider />\n                  </Link>\n                ))}\n              </List>\n              <div className={classes.footer}>\n                <Button\n                  color=\"primary\"\n                  component={Link}\n                  size=\"small\"\n                  to=\"/notifications\"\n                  variant=\"contained\"\n                >\n                  See all\n                </Button>\n              </div>\n            </div>\n          </Fragment>\n        ) : (\n          <div className={classes.empty}>\n            <div className={classes.emptyImageWrapper}>\n              <img\n                alt=\"Empty list\"\n                className={classes.emptyImage}\n                src=\"/images/empty.png\"\n              />\n            </div>\n            <Typography variant=\"h4\">There's nothing here...</Typography>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nNotificationList.propTypes = {\n  className: PropTypes.string,\n  classes: PropTypes.object.isRequired,\n  notifications: PropTypes.array.isRequired,\n  onSelect: PropTypes.func\n};\n\nNotificationList.defaultProps = {\n  notifications: [],\n  onSelect: () => {}\n};\n\nexport default withStyles(styles)(NotificationList);\n"]},"metadata":{},"sourceType":"module"}