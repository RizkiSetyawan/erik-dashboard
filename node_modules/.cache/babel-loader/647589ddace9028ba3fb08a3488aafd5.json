{"ast":null,"code":"import _classCallCheck from \"/Users/rizki/Downloads/dasboard-material/new-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/rizki/Downloads/dasboard-material/new-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/rizki/Downloads/dasboard-material/new-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/rizki/Downloads/dasboard-material/new-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/rizki/Downloads/dasboard-material/new-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/rizki/Downloads/dasboard-material/new-dashboard/src/views/UserList/components/UsersTable/index.jsx\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom'; // Externals\n\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport PerfectScrollbar from 'react-perfect-scrollbar'; // Material helpers\n\nimport { withStyles } from '@material-ui/core/styles'; // Material components\n\nimport Avatar from '@material-ui/core/Avatar';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Typography from '@material-ui/core/Typography';\nimport TablePagination from '@material-ui/core/TablePagination'; // Shared helpers\n\nimport getInitials from 'helpers/getInitials'; // Shared components\n\nimport Portlet from 'components/Portlet';\nimport PortletContent from 'components/PortletContent'; // Component styles\n\nimport styles from './styles';\n\nvar UsersTable =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(UsersTable, _Component);\n\n  function UsersTable() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, UsersTable);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(UsersTable)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      selectedUsers: [],\n      rowsPerPage: 10,\n      page: 0\n    };\n\n    _this.handleSelectAll = function (event) {\n      var _this$props = _this.props,\n          users = _this$props.users,\n          onSelect = _this$props.onSelect;\n      var selectedUsers;\n\n      if (event.target.checked) {\n        selectedUsers = users.map(function (user) {\n          return user.id;\n        });\n      } else {\n        selectedUsers = [];\n      }\n\n      _this.setState({\n        selectedUsers: selectedUsers\n      });\n\n      onSelect(selectedUsers);\n    };\n\n    _this.handleSelectOne = function (event, id) {\n      var onSelect = _this.props.onSelect;\n      var selectedUsers = _this.state.selectedUsers;\n      var selectedIndex = selectedUsers.indexOf(id);\n      var newSelectedUsers = [];\n\n      if (selectedIndex === -1) {\n        newSelectedUsers = newSelectedUsers.concat(selectedUsers, id);\n      } else if (selectedIndex === 0) {\n        newSelectedUsers = newSelectedUsers.concat(selectedUsers.slice(1));\n      } else if (selectedIndex === selectedUsers.length - 1) {\n        newSelectedUsers = newSelectedUsers.concat(selectedUsers.slice(0, -1));\n      } else if (selectedIndex > 0) {\n        newSelectedUsers = newSelectedUsers.concat(selectedUsers.slice(0, selectedIndex), selectedUsers.slice(selectedIndex + 1));\n      }\n\n      _this.setState({\n        selectedUsers: newSelectedUsers\n      });\n\n      onSelect(newSelectedUsers);\n    };\n\n    _this.handleChangePage = function (event, page) {\n      _this.setState({\n        page: page\n      });\n    };\n\n    _this.handleChangeRowsPerPage = function (event) {\n      _this.setState({\n        rowsPerPage: event.target.value\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(UsersTable, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props2 = this.props,\n          classes = _this$props2.classes,\n          className = _this$props2.className,\n          users = _this$props2.users;\n      var _this$state = this.state,\n          activeTab = _this$state.activeTab,\n          selectedUsers = _this$state.selectedUsers,\n          rowsPerPage = _this$state.rowsPerPage,\n          page = _this$state.page;\n      var rootClassName = classNames(classes.root, className);\n      return React.createElement(Portlet, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(PortletContent, {\n        noPadding: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(PerfectScrollbar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(Table, {\n        className: rootClassName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(TableHead, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(TableRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(TableCell, {\n        align: \"left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(Checkbox, {\n        checked: selectedUsers.length === users.length,\n        color: \"primary\",\n        indeterminate: selectedUsers.length > 0 && selectedUsers.length < users.length,\n        onChange: this.handleSelectAll,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }), \"Name\"), React.createElement(TableCell, {\n        align: \"left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, \"ID\"), React.createElement(TableCell, {\n        align: \"left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, \"State\"), React.createElement(TableCell, {\n        align: \"left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, \"Phone\"), React.createElement(TableCell, {\n        align: \"left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, \"Registration date\"))), React.createElement(TableBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, users.filter(function (user) {\n        if (activeTab === 1) {\n          return !user.returning;\n        }\n\n        if (activeTab === 2) {\n          return user.returning;\n        }\n\n        return user;\n      }).slice(0, rowsPerPage).map(function (user) {\n        return React.createElement(TableRow, {\n          className: classes.tableRow,\n          hover: true,\n          key: user.id,\n          selected: selectedUsers.indexOf(user.id) !== -1,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 136\n          },\n          __self: this\n        }, React.createElement(TableCell, {\n          className: classes.tableCell,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 142\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: classes.tableCellInner,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143\n          },\n          __self: this\n        }, React.createElement(Checkbox, {\n          checked: selectedUsers.indexOf(user.id) !== -1,\n          color: \"primary\",\n          onChange: function onChange(event) {\n            return _this2.handleSelectOne(event, user.id);\n          },\n          value: \"true\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 144\n          },\n          __self: this\n        }), React.createElement(Avatar, {\n          className: classes.avatar,\n          src: user.avatarUrl,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 152\n          },\n          __self: this\n        }, getInitials(user.name)), React.createElement(Link, {\n          to: \"#\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 158\n          },\n          __self: this\n        }, React.createElement(Typography, {\n          className: classes.nameText,\n          variant: \"body1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 159\n          },\n          __self: this\n        }, user.name)))), React.createElement(TableCell, {\n          className: classes.tableCell,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 168\n          },\n          __self: this\n        }, user.id), React.createElement(TableCell, {\n          className: classes.tableCell,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 171\n          },\n          __self: this\n        }, user.address.state), React.createElement(TableCell, {\n          className: classes.tableCell,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 174\n          },\n          __self: this\n        }, user.phone), React.createElement(TableCell, {\n          className: classes.tableCell,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 177\n          },\n          __self: this\n        }, moment(user.createdAt).format('DD/MM/YYYY')));\n      })))), React.createElement(TablePagination, {\n        backIconButtonProps: {\n          'aria-label': 'Previous Page'\n        },\n        component: \"div\",\n        count: users.length,\n        nextIconButtonProps: {\n          'aria-label': 'Next Page'\n        },\n        onChangePage: this.handleChangePage,\n        onChangeRowsPerPage: this.handleChangeRowsPerPage,\n        page: page,\n        rowsPerPage: rowsPerPage,\n        rowsPerPageOptions: [5, 10, 25],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return UsersTable;\n}(Component);\n\nUsersTable.propTypes = {\n  className: PropTypes.string,\n  classes: PropTypes.object.isRequired,\n  onSelect: PropTypes.func,\n  onShowDetails: PropTypes.func,\n  users: PropTypes.array.isRequired\n};\nUsersTable.defaultProps = {\n  users: [],\n  onSelect: function onSelect() {},\n  onShowDetails: function onShowDetails() {}\n};\nexport default withStyles(styles)(UsersTable);","map":{"version":3,"sources":["/Users/rizki/Downloads/dasboard-material/new-dashboard/src/views/UserList/components/UsersTable/index.jsx"],"names":["React","Component","Link","classNames","PropTypes","moment","PerfectScrollbar","withStyles","Avatar","Checkbox","Table","TableBody","TableCell","TableHead","TableRow","Typography","TablePagination","getInitials","Portlet","PortletContent","styles","UsersTable","state","selectedUsers","rowsPerPage","page","handleSelectAll","event","props","users","onSelect","target","checked","map","user","id","setState","handleSelectOne","selectedIndex","indexOf","newSelectedUsers","concat","slice","length","handleChangePage","handleChangeRowsPerPage","value","classes","className","activeTab","rootClassName","root","filter","returning","tableRow","tableCell","tableCellInner","avatar","avatarUrl","name","nameText","address","phone","createdAt","format","propTypes","string","object","isRequired","func","onShowDetails","array","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\n// Externals\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\n\n// Material helpers\nimport { withStyles } from '@material-ui/core/styles';\n\n// Material components\nimport Avatar from '@material-ui/core/Avatar';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Typography from '@material-ui/core/Typography';\nimport TablePagination from '@material-ui/core/TablePagination';\n\n// Shared helpers\nimport getInitials from 'helpers/getInitials';\n\n// Shared components\nimport Portlet from 'components/Portlet';\nimport PortletContent from 'components/PortletContent';\n\n// Component styles\nimport styles from './styles';\n\nclass UsersTable extends Component {\n  state = {\n    selectedUsers: [],\n    rowsPerPage: 10,\n    page: 0\n  };\n\n  handleSelectAll = event => {\n    const { users, onSelect } = this.props;\n\n    let selectedUsers;\n\n    if (event.target.checked) {\n      selectedUsers = users.map(user => user.id);\n    } else {\n      selectedUsers = [];\n    }\n\n    this.setState({ selectedUsers });\n\n    onSelect(selectedUsers);\n  };\n\n  handleSelectOne = (event, id) => {\n    const { onSelect } = this.props;\n    const { selectedUsers } = this.state;\n\n    const selectedIndex = selectedUsers.indexOf(id);\n    let newSelectedUsers = [];\n\n    if (selectedIndex === -1) {\n      newSelectedUsers = newSelectedUsers.concat(selectedUsers, id);\n    } else if (selectedIndex === 0) {\n      newSelectedUsers = newSelectedUsers.concat(selectedUsers.slice(1));\n    } else if (selectedIndex === selectedUsers.length - 1) {\n      newSelectedUsers = newSelectedUsers.concat(selectedUsers.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelectedUsers = newSelectedUsers.concat(\n        selectedUsers.slice(0, selectedIndex),\n        selectedUsers.slice(selectedIndex + 1)\n      );\n    }\n\n    this.setState({ selectedUsers: newSelectedUsers });\n\n    onSelect(newSelectedUsers);\n  };\n\n  handleChangePage = (event, page) => {\n    this.setState({ page });\n  };\n\n  handleChangeRowsPerPage = event => {\n    this.setState({ rowsPerPage: event.target.value });\n  };\n\n  render() {\n    const { classes, className, users } = this.props;\n    const { activeTab, selectedUsers, rowsPerPage, page } = this.state;\n\n    const rootClassName = classNames(classes.root, className);\n\n    return (\n      <Portlet>\n        <PortletContent noPadding>\n          <PerfectScrollbar>\n            <Table className={rootClassName}>\n              <TableHead>\n                <TableRow>\n                  <TableCell align=\"left\">\n                    <Checkbox\n                      checked={selectedUsers.length === users.length}\n                      color=\"primary\"\n                      indeterminate={\n                        selectedUsers.length > 0 &&\n                        selectedUsers.length < users.length\n                      }\n                      onChange={this.handleSelectAll}\n                    />\n                    Name\n                  </TableCell>\n                  <TableCell align=\"left\">ID</TableCell>\n                  <TableCell align=\"left\">State</TableCell>\n                  <TableCell align=\"left\">Phone</TableCell>\n                  <TableCell align=\"left\">Registration date</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {users\n                  .filter(user => {\n                    if (activeTab === 1) {\n                      return !user.returning;\n                    }\n\n                    if (activeTab === 2) {\n                      return user.returning;\n                    }\n\n                    return user;\n                  })\n                  .slice(0, rowsPerPage)\n                  .map(user => (\n                    <TableRow\n                      className={classes.tableRow}\n                      hover\n                      key={user.id}\n                      selected={selectedUsers.indexOf(user.id) !== -1}\n                    >\n                      <TableCell className={classes.tableCell}>\n                        <div className={classes.tableCellInner}>\n                          <Checkbox\n                            checked={selectedUsers.indexOf(user.id) !== -1}\n                            color=\"primary\"\n                            onChange={event =>\n                              this.handleSelectOne(event, user.id)\n                            }\n                            value=\"true\"\n                          />\n                          <Avatar\n                            className={classes.avatar}\n                            src={user.avatarUrl}\n                          >\n                            {getInitials(user.name)}\n                          </Avatar>\n                          <Link to=\"#\">\n                            <Typography\n                              className={classes.nameText}\n                              variant=\"body1\"\n                            >\n                              {user.name}\n                            </Typography>\n                          </Link>\n                        </div>\n                      </TableCell>\n                      <TableCell className={classes.tableCell}>\n                        {user.id}\n                      </TableCell>\n                      <TableCell className={classes.tableCell}>\n                        {user.address.state}\n                      </TableCell>\n                      <TableCell className={classes.tableCell}>\n                        {user.phone}\n                      </TableCell>\n                      <TableCell className={classes.tableCell}>\n                        {moment(user.createdAt).format('DD/MM/YYYY')}\n                      </TableCell>\n                    </TableRow>\n                  ))}\n              </TableBody>\n            </Table>\n          </PerfectScrollbar>\n          <TablePagination\n            backIconButtonProps={{\n              'aria-label': 'Previous Page'\n            }}\n            component=\"div\"\n            count={users.length}\n            nextIconButtonProps={{\n              'aria-label': 'Next Page'\n            }}\n            onChangePage={this.handleChangePage}\n            onChangeRowsPerPage={this.handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </PortletContent>\n      </Portlet>\n    );\n  }\n}\n\nUsersTable.propTypes = {\n  className: PropTypes.string,\n  classes: PropTypes.object.isRequired,\n  onSelect: PropTypes.func,\n  onShowDetails: PropTypes.func,\n  users: PropTypes.array.isRequired\n};\n\nUsersTable.defaultProps = {\n  users: [],\n  onSelect: () => {},\n  onShowDetails: () => {}\n};\n\nexport default withStyles(styles)(UsersTable);\n"]},"metadata":{},"sourceType":"module"}