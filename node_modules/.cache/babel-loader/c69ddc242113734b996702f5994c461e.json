{"ast":null,"code":"import _objectDestructuringEmpty from \"/Users/rizki/Documents/work/dashboard-erik/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty\";\nvar _jsxFileName = \"/Users/rizki/Documents/work/dashboard-erik/src/layouts/Dashboard/components/Topbar/index.jsx\";\nimport React, { Fragment } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport AuthContext from '../../../../context/auth/authContext'; // Externals\n\nimport classNames from 'classnames';\nimport compose from 'recompose/compose';\nimport PropTypes from 'prop-types'; // Material helpers\n\nimport { withStyles } from '@material-ui/core/styles'; // Material components\n\nimport IconButton from '@material-ui/core/IconButton';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport CloseIcon from '@material-ui/icons/CloseOutlined';\nimport SignoutIcon from '@material-ui/icons/ExitToAppOutlined'; // Component styles\n\nimport styles from './styles';\n\nvar Topbar = function Topbar(props) {\n  var authContext = useContext(AuthContext);\n\n  _objectDestructuringEmpty(authContext);\n\n  var classes = props.classes,\n      className = props.className,\n      title = props.title,\n      isSidebarOpen = props.isSidebarOpen,\n      onToggleSidebar = props.onToggleSidebar;\n  var rootClassName = classNames(classes.root, className);\n\n  var handleSignOut = function handleSignOut() {\n    logout();\n  };\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: rootClassName,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(Toolbar, {\n    className: classes.toolbar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    className: classes.menuButton,\n    onClick: onToggleSidebar,\n    variant: \"text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, isSidebarOpen ? React.createElement(CloseIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }) : React.createElement(MenuIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  })), React.createElement(Typography, {\n    className: classes.title,\n    variant: \"h4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, title), React.createElement(IconButton, {\n    className: classes.signOutButton,\n    onClick: handleSignOut,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(SignoutIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  })))));\n};\n\nTopbar.propTypes = {\n  className: PropTypes.string,\n  classes: PropTypes.object.isRequired,\n  history: PropTypes.object.isRequired,\n  isSidebarOpen: PropTypes.bool,\n  onToggleSidebar: PropTypes.func,\n  title: PropTypes.string\n};\nTopbar.defaultProps = {\n  onToggleSidebar: function onToggleSidebar() {}\n};\nexport default compose(withRouter, withStyles(styles))(Topbar);","map":{"version":3,"sources":["/Users/rizki/Documents/work/dashboard-erik/src/layouts/Dashboard/components/Topbar/index.jsx"],"names":["React","Fragment","withRouter","AuthContext","classNames","compose","PropTypes","withStyles","IconButton","Toolbar","Typography","MenuIcon","CloseIcon","SignoutIcon","styles","Topbar","props","authContext","useContext","classes","className","title","isSidebarOpen","onToggleSidebar","rootClassName","root","handleSignOut","logout","toolbar","menuButton","signOutButton","propTypes","string","object","isRequired","history","bool","func","defaultProps"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport AuthContext from '../../../../context/auth/authContext';\n\n// Externals\nimport classNames from 'classnames';\nimport compose from 'recompose/compose';\nimport PropTypes from 'prop-types';\n\n// Material helpers\nimport { withStyles } from '@material-ui/core/styles';\n\n// Material components\nimport IconButton from '@material-ui/core/IconButton';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport CloseIcon from '@material-ui/icons/CloseOutlined';\nimport SignoutIcon from '@material-ui/icons/ExitToAppOutlined';\n\n// Component styles\nimport styles from './styles';\n\nconst Topbar = (props) => {\n\n  const authContext = useContext(AuthContext);\n  const {  } = authContext;\n\n    const {\n      classes,\n      className,\n      title,\n      isSidebarOpen,\n      onToggleSidebar\n    } = props;\n\n    const rootClassName = classNames(classes.root, className);\n\n    const handleSignOut = () => {\n      logout();\n    }\n\n    return (\n      <Fragment>\n        <div className={rootClassName}>\n          <Toolbar className={classes.toolbar}>\n            <IconButton\n              className={classes.menuButton}\n              onClick={onToggleSidebar}\n              variant=\"text\"\n            >\n              {isSidebarOpen ? <CloseIcon /> : <MenuIcon />}\n            </IconButton>\n            <Typography\n              className={classes.title}\n              variant=\"h4\"\n            >\n              {title}\n            </Typography>\n            <IconButton\n              className={classes.signOutButton}\n              onClick={handleSignOut}\n            >\n              <SignoutIcon />\n            </IconButton>\n          </Toolbar>\n        </div>\n      </Fragment>\n    );\n  }\n\nTopbar.propTypes = {\n  className: PropTypes.string,\n  classes: PropTypes.object.isRequired,\n  history: PropTypes.object.isRequired,\n  isSidebarOpen: PropTypes.bool,\n  onToggleSidebar: PropTypes.func,\n  title: PropTypes.string\n};\n\nTopbar.defaultProps = {\n  onToggleSidebar: () => { }\n};\n\nexport default compose(\n  withRouter,\n  withStyles(styles)\n)(Topbar);\n"]},"metadata":{},"sourceType":"module"}