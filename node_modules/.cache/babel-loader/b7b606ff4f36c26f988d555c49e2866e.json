{"ast":null,"code":"import _objectSpread from \"/Users/rizki/Documents/work/dashboard-erik/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"/Users/rizki/Documents/work/dashboard-erik/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nvar _jsxFileName = \"/Users/rizki/Documents/work/dashboard-erik/src/views/DataPO/DataPO.jsx\";\nimport React from 'react';\nimport MaterialTable from 'material-table';\nimport DashboardLayout from 'layouts/Dashboard';\nimport { withStyles } from '@material-ui/core/styles';\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      padding: theme.spacing.unit * 4\n    },\n    item: {\n      height: '100%'\n    }\n  };\n};\n\nvar DataPO = function DataPO(props) {\n  var classes = props.classes;\n  return React.createElement(DashboardLayout, {\n    title: \"Data PO\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"return (\", React.createElement(MaterialTable, {\n    title: \"Editable Example\",\n    columns: state.columns,\n    data: state.data,\n    editable: {\n      onRowAdd: function onRowAdd(newData) {\n        return new Promise(function (resolve) {\n          setTimeout(function () {\n            resolve();\n            setState(function (prevState) {\n              var data = _toConsumableArray(prevState.data);\n\n              data.push(newData);\n              return _objectSpread({}, prevState, {\n                data: data\n              });\n            });\n          }, 600);\n        });\n      },\n      onRowUpdate: function onRowUpdate(newData, oldData) {\n        return new Promise(function (resolve) {\n          setTimeout(function () {\n            resolve();\n\n            if (oldData) {\n              setState(function (prevState) {\n                var data = _toConsumableArray(prevState.data);\n\n                data[data.indexOf(oldData)] = newData;\n                return _objectSpread({}, prevState, {\n                  data: data\n                });\n              });\n            }\n          }, 600);\n        });\n      },\n      onRowDelete: function onRowDelete(oldData) {\n        return new Promise(function (resolve) {\n          setTimeout(function () {\n            resolve();\n            setState(function (prevState) {\n              var data = _toConsumableArray(prevState.data);\n\n              data.splice(data.indexOf(oldData), 1);\n              return _objectSpread({}, prevState, {\n                data: data\n              });\n            });\n          }, 600);\n        });\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }), \"); }\"));\n};\n\nexport default withStyles(styles)(DataPO);","map":{"version":3,"sources":["/Users/rizki/Documents/work/dashboard-erik/src/views/DataPO/DataPO.jsx"],"names":["React","MaterialTable","DashboardLayout","withStyles","styles","theme","root","padding","spacing","unit","item","height","DataPO","props","classes","state","columns","data","onRowAdd","newData","Promise","resolve","setTimeout","setState","prevState","push","onRowUpdate","oldData","indexOf","onRowDelete","splice"],"mappings":"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","sourcesContent":["import React from 'react'\n\nimport MaterialTable from 'material-table';\nimport DashboardLayout from 'layouts/Dashboard';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = theme => ({\n   root: {\n     padding: theme.spacing.unit * 4\n   },\n   item: {\n     height: '100%'\n   }\n });\n\nconst DataPO = (props) => {\n   const { classes } = props;\n   return (\n      <DashboardLayout title=\"Data PO\">\n         <div className={classes.root}>\n\n\n\n \n\n  return (\n    <MaterialTable\n      title=\"Editable Example\"\n      columns={state.columns}\n      data={state.data}\n      editable={{\n        onRowAdd: newData =>\n          new Promise(resolve => {\n            setTimeout(() => {\n              resolve();\n              setState(prevState => {\n                const data = [...prevState.data];\n                data.push(newData);\n                return { ...prevState, data };\n              });\n            }, 600);\n          }),\n        onRowUpdate: (newData, oldData) =>\n          new Promise(resolve => {\n            setTimeout(() => {\n              resolve();\n              if (oldData) {\n                setState(prevState => {\n                  const data = [...prevState.data];\n                  data[data.indexOf(oldData)] = newData;\n                  return { ...prevState, data };\n                });\n              }\n            }, 600);\n          }),\n        onRowDelete: oldData =>\n          new Promise(resolve => {\n            setTimeout(() => {\n              resolve();\n              setState(prevState => {\n                const data = [...prevState.data];\n                data.splice(data.indexOf(oldData), 1);\n                return { ...prevState, data };\n              });\n            }, 600);\n          }),\n      }}\n    />\n  );\n}\n         </div>\n      </DashboardLayout>\n   )\n}\n\nexport default withStyles(styles)(DataPO);\n"]},"metadata":{},"sourceType":"module"}