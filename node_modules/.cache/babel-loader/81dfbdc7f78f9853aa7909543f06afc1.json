{"ast":null,"code":"var _jsxFileName = \"/Users/rizki/Downloads/dasboard-material/new-dashboard/src/layouts/Dashboard/components/Topbar/index.jsx\";\nimport React, { Component, Fragment } from 'react';\nimport { withRouter } from 'react-router-dom'; // Externals\n\nimport classNames from 'classnames';\nimport compose from 'recompose/compose';\nimport PropTypes from 'prop-types'; // Material helpers\n\nimport { withStyles } from '@material-ui/core'; // Material components\n\nimport { IconButton, Toolbar, Typography } from '@material-ui/core'; // Material icons\n\nimport { Menu as MenuIcon, Close as CloseIcon, Input as InputIcon } from '@material-ui/icons'; // Component styles\n\nimport styles from './styles';\n\nclass Topbar extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleSignOut = () => {\n      const history = this.props.history;\n      localStorage.setItem('isAuthenticated', false);\n      history.push('/sign-in');\n    };\n  }\n\n  render() {\n    const _this$props = this.props,\n          classes = _this$props.classes,\n          className = _this$props.className,\n          title = _this$props.title,\n          isSidebarOpen = _this$props.isSidebarOpen,\n          onToggleSidebar = _this$props.onToggleSidebar;\n    const rootClassName = classNames(classes.root, className);\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: rootClassName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(Toolbar, {\n      className: classes.toolbar,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      className: classes.menuButton,\n      onClick: onToggleSidebar,\n      variant: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, isSidebarOpen ? React.createElement(CloseIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }) : React.createElement(MenuIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    })), React.createElement(Typography, {\n      className: classes.title,\n      variant: \"h4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, title), React.createElement(IconButton, {\n      className: classes.signOutButton,\n      onClick: this.handleSignOut,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(InputIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nTopbar.propTypes = {\n  className: PropTypes.string,\n  classes: PropTypes.object.isRequired,\n  history: PropTypes.object.isRequired,\n  isSidebarOpen: PropTypes.bool,\n  onToggleSidebar: PropTypes.func,\n  title: PropTypes.string\n};\nTopbar.defaultProps = {\n  onToggleSidebar: () => {}\n};\nexport default compose(withRouter, withStyles(styles))(Topbar);","map":{"version":3,"sources":["/Users/rizki/Downloads/dasboard-material/new-dashboard/src/layouts/Dashboard/components/Topbar/index.jsx"],"names":["React","Component","Fragment","withRouter","classNames","compose","PropTypes","withStyles","IconButton","Toolbar","Typography","Menu","MenuIcon","Close","CloseIcon","Input","InputIcon","styles","Topbar","handleSignOut","history","props","localStorage","setItem","push","render","classes","className","title","isSidebarOpen","onToggleSidebar","rootClassName","root","toolbar","menuButton","signOutButton","propTypes","string","object","isRequired","bool","func","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport { withRouter } from 'react-router-dom';\n\n// Externals\nimport classNames from 'classnames';\nimport compose from 'recompose/compose';\nimport PropTypes from 'prop-types';\n\n// Material helpers\nimport { withStyles } from '@material-ui/core';\n\n// Material components\nimport {\n  IconButton,\n  Toolbar,\n  Typography\n} from '@material-ui/core';\n\n// Material icons\nimport {\n  Menu as MenuIcon,\n  Close as CloseIcon,\n  Input as InputIcon\n} from '@material-ui/icons';\n\n// Component styles\nimport styles from './styles';\n\nclass Topbar extends Component {\n\n  handleSignOut = () => {\n    const { history } = this.props;\n\n    localStorage.setItem('isAuthenticated', false);\n    history.push('/sign-in');\n  };\n\n  render() {\n    const {\n      classes,\n      className,\n      title,\n      isSidebarOpen,\n      onToggleSidebar\n    } = this.props;\n\n    const rootClassName = classNames(classes.root, className);\n\n    return (\n      <Fragment>\n        <div className={rootClassName}>\n          <Toolbar className={classes.toolbar}>\n            <IconButton\n              className={classes.menuButton}\n              onClick={onToggleSidebar}\n              variant=\"text\"\n            >\n              {isSidebarOpen ? <CloseIcon /> : <MenuIcon />}\n            </IconButton>\n            <Typography\n              className={classes.title}\n              variant=\"h4\"\n            >\n              {title}\n            </Typography>\n            <IconButton\n              className={classes.signOutButton}\n              onClick={this.handleSignOut}\n            >\n              <InputIcon />\n            </IconButton>\n          </Toolbar>\n        </div>\n      </Fragment>\n    );\n  }\n}\n\nTopbar.propTypes = {\n  className: PropTypes.string,\n  classes: PropTypes.object.isRequired,\n  history: PropTypes.object.isRequired,\n  isSidebarOpen: PropTypes.bool,\n  onToggleSidebar: PropTypes.func,\n  title: PropTypes.string\n};\n\nTopbar.defaultProps = {\n  onToggleSidebar: () => {}\n};\n\nexport default compose(\n  withRouter,\n  withStyles(styles)\n)(Topbar);\n"]},"metadata":{},"sourceType":"module"}