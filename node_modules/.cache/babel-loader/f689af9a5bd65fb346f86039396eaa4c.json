{"ast":null,"code":"import _defineProperty from \"/Users/rizki/Documents/work/dashboard-erik/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/rizki/Documents/work/dashboard-erik/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/rizki/Documents/work/dashboard-erik/src/layouts/Dashboard/index.jsx\";\nimport React, { use, Fragment } from 'react'; // Externals\n\nimport classNames from 'classnames';\nimport compose from 'recompose/compose';\nimport PropTypes from 'prop-types'; // Material helpers\n\nimport { withStyles } from '@material-ui/core/styles';\nimport withWidth from '@material-ui/core/withWidth'; // Material components\n\nimport Drawer from '@material-ui/core/Drawer'; // Custom components\n\nimport Sidebar from './components/Sidebar';\nimport Topbar from './components/Topbar';\nimport Footer from './components/Footer'; // Component styles\n\nimport styles from './styles';\n\nvar DashboardLayout = function DashboardLayout(props) {\n  var isMobile = ['xs', 'sm', 'md'].includes(props.width);\n\n  var _useState = useState({\n    isOpen: !isMobile\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      state = _useState2[0],\n      setState = _useState2[1];\n\n  var handleClose = function handleClose() {\n    setState({\n      isOpen: false\n    });\n  };\n\n  var handleToggleOpen = function handleToggleOpen() {\n    setState(function (prevState) {\n      return {\n        isOpen: !prevState.isOpen\n      };\n    });\n  };\n\n  var classes = props.classes,\n      width = props.width,\n      title = props.title,\n      children = props.children;\n  var isOpen = state.isOpen;\n  var shiftTopbar = isOpen && !isMobile;\n  var shiftContent = isOpen && !isMobile;\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(Topbar, {\n    className: classNames(classes.topbar, _defineProperty({}, classes.topbarShift, shiftTopbar)),\n    isSidebarOpen: isOpen,\n    onToggleSidebar: handleToggleOpen,\n    title: title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }), React.createElement(Drawer, {\n    anchor: \"left\",\n    classes: {\n      paper: classes.drawerPaper\n    },\n    onClose: handleClose,\n    open: isOpen,\n    variant: isMobile ? 'temporary' : 'persistent',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(Sidebar, {\n    className: classes.sidebar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  })), React.createElement(\"main\", {\n    className: classNames(classes.content, _defineProperty({}, classes.contentShift, shiftContent)),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, children, React.createElement(Footer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  })));\n};\n\nDashboardLayout.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  classes: PropTypes.object.isRequired,\n  title: PropTypes.string,\n  width: PropTypes.string.isRequired\n};\nexport default compose(withStyles(styles), withWidth())(DashboardLayout);","map":{"version":3,"sources":["/Users/rizki/Documents/work/dashboard-erik/src/layouts/Dashboard/index.jsx"],"names":["React","use","Fragment","classNames","compose","PropTypes","withStyles","withWidth","Drawer","Sidebar","Topbar","Footer","styles","DashboardLayout","props","isMobile","includes","width","useState","isOpen","state","setState","handleClose","handleToggleOpen","prevState","classes","title","children","shiftTopbar","shiftContent","topbar","topbarShift","paper","drawerPaper","sidebar","content","contentShift","propTypes","node","className","string","object","isRequired"],"mappings":"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","sourcesContent":["import React, { use, Fragment } from 'react';\n\n// Externals\nimport classNames from 'classnames';\nimport compose from 'recompose/compose';\nimport PropTypes from 'prop-types';\n\n// Material helpers\nimport { withStyles } from '@material-ui/core/styles';\nimport withWidth from '@material-ui/core/withWidth';\n\n// Material components\nimport Drawer from '@material-ui/core/Drawer';\n\n// Custom components\nimport Sidebar from './components/Sidebar';\nimport Topbar from './components/Topbar';\nimport Footer from './components/Footer';\n\n// Component styles\nimport styles from './styles';\n\nconst DashboardLayout = props => {\n\n  const isMobile = ['xs', 'sm', 'md'].includes(props.width);\n  const [state, setState] = useState({\n    isOpen: !isMobile\n  });\n\n  const handleClose = () => {\n    setState({ isOpen: false });\n  };\n\n  const handleToggleOpen = () => {\n    setState(prevState => ({\n      isOpen: !prevState.isOpen\n    }));\n  };\n\n  const { classes, width, title, children } = props;\n  const { isOpen } = state;\n\n  const shiftTopbar = isOpen && !isMobile;\n  const shiftContent = isOpen && !isMobile;\n\n  return (\n    <Fragment>\n      <Topbar\n        className={classNames(classes.topbar, {\n          [classes.topbarShift]: shiftTopbar\n        })}\n        isSidebarOpen={isOpen}\n        onToggleSidebar={handleToggleOpen}\n        title={title}\n      />\n      <Drawer\n        anchor=\"left\"\n        classes={{ paper: classes.drawerPaper }}\n        onClose={handleClose}\n        open={isOpen}\n        variant={isMobile ? 'temporary' : 'persistent'}>\n        <Sidebar className={classes.sidebar} />\n      </Drawer>\n      <main\n        className={classNames(classes.content, {\n          [classes.contentShift]: shiftContent\n        })}>\n        {children}\n        <Footer />\n      </main>\n    </Fragment>\n  );\n};\n\nDashboardLayout.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  classes: PropTypes.object.isRequired,\n  title: PropTypes.string,\n  width: PropTypes.string.isRequired\n};\n\nexport default compose(\n  withStyles(styles),\n  withWidth()\n)(DashboardLayout);\n"]},"metadata":{},"sourceType":"module"}