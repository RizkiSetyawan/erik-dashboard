{"ast":null,"code":"import _slicedToArray from \"/Users/rizki/Downloads/dasboard-material/new-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectSpread from \"/Users/rizki/Downloads/dasboard-material/new-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/rizki/Downloads/dasboard-material/new-dashboard/src/views/Dashboard/index.jsx\";\nimport React, { useState, useCallback } from 'react'; // Externals\n\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport update from 'immutability-helper';\nimport clsx from \"clsx\"; // Material helpers\n\nimport { withStyles } from '@material-ui/core';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport ItemTypes from '../../common/ItemTypes'; // Material components\n\nimport { Grid } from '@material-ui/core'; // Shared layouts\n\nimport { Dashboard as DashboardLayout } from 'layouts'; // Custom components\n\nimport { DragComponent, DropComponent } from './components'; // Shared components\n\nimport { Portlet, PortletHeader, PortletLabel, PortletContent } from 'components'; // Component styles\n\nconst styles = theme => ({\n  root: {\n    padding: theme.spacing.unit * 4\n  },\n  item: {\n    height: '100%'\n  }\n});\n\nconst drawerWidth = 240;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\"\n  },\n  toolbar: {\n    paddingRight: 24 // keep right padding when drawer closed\n\n  },\n  toolbarIcon: _objectSpread({\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n    padding: \"0 8px\"\n  }, theme.mixins.toolbar),\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    })\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: \"calc(100% - \".concat(drawerWidth, \"px)\"),\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  menuButton: {\n    marginRight: 36\n  },\n  menuButtonHidden: {\n    display: \"none\"\n  },\n  title: {\n    flexGrow: 1\n  },\n  drawerPaper: {\n    position: \"relative\",\n    whiteSpace: \"nowrap\",\n    width: drawerWidth,\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  drawerPaperClose: {\n    overflowX: \"hidden\",\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    width: theme.spacing(5),\n    [theme.breakpoints.up(\"sm\")]: {\n      width: theme.spacing(7)\n    }\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: \"100vh\",\n    overflow: \"auto\"\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n    paddingLeft: theme.spacing(0),\n    paddingRight: theme.spacing(0),\n    marginLeft: \"50px\",\n    marginRight: \"50px\"\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: \"flex\",\n    flexDirection: \"column\",\n    width: \"100%\"\n  },\n  fixedHeight: {\n    height: \"100%\"\n  }\n}));\n\nconst Dashboard = props => {\n  const classes = props.classes;\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n\n  const _useState = useState([{\n    accepts: [ItemTypes.COMPONENTS],\n    lastDroppedItem: null\n  }, {\n    accepts: [ItemTypes.COMPONENTS],\n    lastDroppedItem: null\n  }, {\n    accepts: [ItemTypes.COMPONENTS],\n    lastDroppedItem: null\n  }, {\n    accepts: [ItemTypes.COMPONENTS],\n    lastDroppedItem: null\n  }, {\n    accepts: [ItemTypes.COMPONENTS],\n    lastDroppedItem: null\n  }, {\n    accepts: [ItemTypes.COMPONENTS],\n    lastDroppedItem: null\n  }, {\n    accepts: [ItemTypes.COMPONENTS],\n    lastDroppedItem: null\n  }, {\n    accepts: [ItemTypes.COMPONENTS],\n    lastDroppedItem: null\n  }, {\n    accepts: [ItemTypes.COMPONENTS],\n    lastDroppedItem: null\n  }]),\n        _useState2 = _slicedToArray(_useState, 2),\n        dustbins = _useState2[0],\n        setDustbins = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        droppedBoxNames = _useState4[0],\n        setDroppedBoxNames = _useState4[1];\n\n  function isDropped(boxName) {\n    return droppedBoxNames.indexOf(boxName) > -1;\n  }\n\n  const _useState5 = useState([{\n    name: 'Bottle',\n    type: ItemTypes.COMPONENTS\n  }, {\n    name: 'Banana',\n    type: ItemTypes.COMPONENTS\n  }, {\n    name: 'Magazine',\n    type: ItemTypes.COMPONENTS\n  }]),\n        _useState6 = _slicedToArray(_useState5, 1),\n        boxes = _useState6[0];\n\n  const handleDrop = useCallback((index, item) => {\n    const name = item.name;\n    setDroppedBoxNames(update(droppedBoxNames, name ? {\n      $push: [name]\n    } : {\n      $push: []\n    }));\n    setDustbins(update(dustbins, {\n      [index]: {\n        lastDroppedItem: {\n          $set: item\n        }\n      }\n    }));\n  }, [droppedBoxNames, dustbins]);\n  const handleCancelDrop = useCallback((index, item) => {\n    let name = item.name;\n    setDroppedBoxNames(update(droppedBoxNames, name ? {\n      $unshift: []\n    } : {\n      $unshift: [name]\n    }));\n    setDustbins(update(dustbins, {\n      [index]: {\n        lastDroppedItem: {\n          $set: null\n        }\n      }\n    }));\n  }, [droppedBoxNames, dustbins]);\n  return React.createElement(DashboardLayout, {\n    title: \"Dashboard\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    spacing: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    lg: 3,\n    md: 3,\n    xl: 3,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195\n    },\n    __self: this\n  }, React.createElement(Portlet, {\n    className: classNames(classes.root, classes.item),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196\n    },\n    __self: this\n  }, boxes.map(({\n    name,\n    type\n  }, index) => React.createElement(DragComponent, {\n    name: name,\n    type: type,\n    isDropped: isDropped(name),\n    key: index,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198\n    },\n    __self: this\n  })))), React.createElement(Grid, {\n    item: true,\n    lg: 9,\n    md: 9,\n    xl: 9,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207\n    },\n    __self: this\n  }, React.createElement(Portlet, {\n    className: classNames(classes.root, classes.item),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208\n    },\n    __self: this\n  }, dustbins.map(({\n    accepts,\n    lastDroppedItem\n  }, index) => React.createElement(DropComponent, {\n    accept: accepts,\n    lastDroppedItem: lastDroppedItem,\n    onDrop: item => handleDrop(index, item),\n    key: index,\n    onCancel: item => handleCancelDrop(index, item),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210\n    },\n    __self: this\n  })))))));\n};\n\nDashboard.propTypes = {\n  className: PropTypes.string,\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(Dashboard);","map":{"version":3,"sources":["/Users/rizki/Downloads/dasboard-material/new-dashboard/src/views/Dashboard/index.jsx"],"names":["React","useState","useCallback","PropTypes","classNames","update","clsx","withStyles","makeStyles","ItemTypes","Grid","Dashboard","DashboardLayout","DragComponent","DropComponent","Portlet","PortletHeader","PortletLabel","PortletContent","styles","theme","root","padding","spacing","unit","item","height","drawerWidth","useStyles","display","toolbar","paddingRight","toolbarIcon","alignItems","justifyContent","mixins","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","width","enteringScreen","menuButton","marginRight","menuButtonHidden","title","flexGrow","drawerPaper","position","whiteSpace","drawerPaperClose","overflowX","breakpoints","up","appBarSpacer","content","overflow","container","paddingTop","paddingBottom","paddingLeft","paper","flexDirection","fixedHeight","props","classes","fixedHeightPaper","accepts","COMPONENTS","lastDroppedItem","dustbins","setDustbins","droppedBoxNames","setDroppedBoxNames","isDropped","boxName","indexOf","name","type","boxes","handleDrop","index","$push","$set","handleCancelDrop","$unshift","map","propTypes","className","string","object","isRequired"],"mappings":"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","sourcesContent":["import React, { useState, useCallback } from 'react';\n\n// Externals\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport update from 'immutability-helper';\nimport clsx from \"clsx\";\n\n// Material helpers\nimport { withStyles } from '@material-ui/core';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport ItemTypes from '../../common/ItemTypes';\n\n// Material components\nimport { Grid } from '@material-ui/core';\n\n// Shared layouts\nimport { Dashboard as DashboardLayout } from 'layouts';\n\n// Custom components\nimport { DragComponent, DropComponent } from './components';\n\n// Shared components\nimport {\n  Portlet,\n  PortletHeader,\n  PortletLabel,\n  PortletContent\n} from 'components';\n\n// Component styles\nconst styles = theme => ({\n  root: {\n    padding: theme.spacing.unit * 4\n  },\n  item: {\n    height: '100%'\n  }\n});\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\"\n  },\n  toolbar: {\n    paddingRight: 24 // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n    padding: \"0 8px\",\n    ...theme.mixins.toolbar\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    })\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  menuButton: {\n    marginRight: 36\n  },\n  menuButtonHidden: {\n    display: \"none\"\n  },\n  title: {\n    flexGrow: 1\n  },\n  drawerPaper: {\n    position: \"relative\",\n    whiteSpace: \"nowrap\",\n    width: drawerWidth,\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  drawerPaperClose: {\n    overflowX: \"hidden\",\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    width: theme.spacing(5),\n    [theme.breakpoints.up(\"sm\")]: {\n      width: theme.spacing(7)\n    }\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: \"100vh\",\n    overflow: \"auto\"\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n    paddingLeft: theme.spacing(0),\n    paddingRight: theme.spacing(0),\n    marginLeft: \"50px\",\n    marginRight: \"50px\"\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: \"flex\",\n    flexDirection: \"column\",\n    width: \"100%\",\n  },\n  fixedHeight: {\n    height: \"100%\"\n  }\n}));\n\nconst Dashboard = props => {\n  const { classes } = props;\n    const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n\n  const [dustbins, setDustbins] = useState([\n    { accepts: [ItemTypes.COMPONENTS], lastDroppedItem: null },\n    { accepts: [ItemTypes.COMPONENTS], lastDroppedItem: null },\n    { accepts: [ItemTypes.COMPONENTS], lastDroppedItem: null },\n    { accepts: [ItemTypes.COMPONENTS], lastDroppedItem: null },\n    { accepts: [ItemTypes.COMPONENTS], lastDroppedItem: null },\n    { accepts: [ItemTypes.COMPONENTS], lastDroppedItem: null },\n    { accepts: [ItemTypes.COMPONENTS], lastDroppedItem: null },\n    { accepts: [ItemTypes.COMPONENTS], lastDroppedItem: null },\n    { accepts: [ItemTypes.COMPONENTS], lastDroppedItem: null }\n  ]);\n\n  const [droppedBoxNames, setDroppedBoxNames] = useState([]);\n  function isDropped(boxName) {\n    return droppedBoxNames.indexOf(boxName) > -1;\n  }\n\n  const [boxes] = useState([\n    { name: 'Bottle', type: ItemTypes.COMPONENTS },\n    { name: 'Banana', type: ItemTypes.COMPONENTS },\n    { name: 'Magazine', type: ItemTypes.COMPONENTS }\n  ]);\n\n  const handleDrop = useCallback(\n    (index, item) => {\n      const { name } = item;\n      setDroppedBoxNames(\n        update(droppedBoxNames, name ? { $push: [name] } : { $push: [] })\n      );\n      setDustbins(\n        update(dustbins, {\n          [index]: {\n            lastDroppedItem: {\n              $set: item\n            }\n          }\n        })\n      );\n    },\n    [droppedBoxNames, dustbins]\n  );\n\n  const handleCancelDrop = useCallback(\n    (index, item) => {\n      let { name } = item;\n      setDroppedBoxNames(\n        update(droppedBoxNames, name ? { $unshift: [] } : { $unshift: [name] })\n      );\n      setDustbins(\n        update(dustbins, {\n          [index]: {\n            lastDroppedItem: {\n              $set: null\n            }\n          }\n        })\n      );\n    },\n    [droppedBoxNames, dustbins]\n  );\n\n  return (\n    <DashboardLayout title=\"Dashboard\">\n      <div className={classes.root}>\n        <Grid container spacing={4}>\n          <Grid item lg={3} md={3} xl={3} xs={12}>\n            <Portlet className={classNames(classes.root, classes.item)}>\n              {boxes.map(({ name, type }, index) => (\n                <DragComponent\n                  name={name}\n                  type={type}\n                  isDropped={isDropped(name)}\n                  key={index}\n                />\n              ))}\n            </Portlet>\n          </Grid>\n          <Grid item lg={9} md={9} xl={9} xs={12}>\n            <Portlet className={classNames(classes.root, classes.item)}>\n              {dustbins.map(({ accepts, lastDroppedItem }, index) => (\n                <DropComponent\n                  accept={accepts}\n                  lastDroppedItem={lastDroppedItem}\n                  onDrop={item => handleDrop(index, item)}\n                  key={index}\n                  onCancel={item => handleCancelDrop(index, item)}\n                />\n              ))}\n            </Portlet>\n          </Grid>\n        </Grid>\n      </div>\n    </DashboardLayout>\n  );\n};\n\nDashboard.propTypes = {\n  className: PropTypes.string,\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(Dashboard);\n"]},"metadata":{},"sourceType":"module"}