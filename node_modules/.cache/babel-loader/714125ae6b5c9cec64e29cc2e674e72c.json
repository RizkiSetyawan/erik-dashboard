{"ast":null,"code":"import _regeneratorRuntime from \"/Users/rizki/Downloads/dasboard-material/new-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/rizki/Downloads/dasboard-material/new-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/rizki/Downloads/dasboard-material/new-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/rizki/Downloads/dasboard-material/new-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/rizki/Downloads/dasboard-material/new-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/rizki/Downloads/dasboard-material/new-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/rizki/Downloads/dasboard-material/new-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/rizki/Downloads/dasboard-material/new-dashboard/src/layouts/Dashboard/components/Topbar/index.jsx\";\nimport React, { Component, Fragment } from 'react';\nimport { withRouter } from 'react-router-dom'; // Externals\n\nimport classNames from 'classnames';\nimport compose from 'recompose/compose';\nimport PropTypes from 'prop-types'; // Material helpers\n\nimport { withStyles } from '@material-ui/core/styles'; // Material components\n\nimport Badge from '@material-ui/core/Badge';\nimport IconButton from '@material-ui/core/IconButton';\nimport Popover from '@material-ui/core/Popover';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport CloseIcon from '@material-ui/icons/CloseOutlined';\nimport NotificationsIcon from '@material-ui/icons/NotificationsOutlined';\nimport SignoutIcon from '@material-ui/icons/ExitToAppOutlined'; // Shared services\n\nimport { getNotifications as _getNotifications } from 'services/notification'; // Custom components\n\nimport NotificationList from './components/NotificationList'; // Component styles\n\nimport styles from './styles';\n\nvar Topbar =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Topbar, _Component);\n\n  function Topbar() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Topbar);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Topbar)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.signal = true;\n    _this.state = {\n      notifications: [],\n      notificationsLimit: 4,\n      notificationsCount: 0,\n      notificationsEl: null\n    };\n\n    _this.handleSignOut = function () {\n      var history = _this.props.history;\n      localStorage.setItem('isAuthenticated', false);\n      history.push('/sign-in');\n    };\n\n    _this.handleShowNotifications = function (event) {\n      _this.setState({\n        notificationsEl: event.currentTarget\n      });\n    };\n\n    _this.handleCloseNotifications = function () {\n      _this.setState({\n        notificationsEl: null\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Topbar, [{\n    key: \"getNotifications\",\n    value: function () {\n      var _getNotifications2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var notificationsLimit, _ref, notifications, notificationsCount;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                notificationsLimit = this.state.notificationsLimit;\n                _context.next = 4;\n                return _getNotifications(notificationsLimit);\n\n              case 4:\n                _ref = _context.sent;\n                notifications = _ref.notifications;\n                notificationsCount = _ref.notificationsCount;\n\n                if (this.signal) {\n                  this.setState({\n                    notifications: notifications,\n                    notificationsCount: notificationsCount\n                  });\n                }\n\n                _context.next = 13;\n                break;\n\n              case 10:\n                _context.prev = 10;\n                _context.t0 = _context[\"catch\"](0);\n                return _context.abrupt(\"return\");\n\n              case 13:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 10]]);\n      }));\n\n      function getNotifications() {\n        return _getNotifications2.apply(this, arguments);\n      }\n\n      return getNotifications;\n    }()\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.signal = true;\n      this.getNotifications();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.signal = false;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          classes = _this$props.classes,\n          className = _this$props.className,\n          title = _this$props.title,\n          isSidebarOpen = _this$props.isSidebarOpen,\n          onToggleSidebar = _this$props.onToggleSidebar;\n      var _this$state = this.state,\n          notifications = _this$state.notifications,\n          notificationsCount = _this$state.notificationsCount,\n          notificationsEl = _this$state.notificationsEl;\n      var rootClassName = classNames(classes.root, className);\n      var showNotifications = Boolean(notificationsEl);\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: rootClassName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(Toolbar, {\n        className: classes.toolbar,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(IconButton, {\n        className: classes.menuButton,\n        onClick: onToggleSidebar,\n        variant: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, isSidebarOpen ? React.createElement(CloseIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }) : React.createElement(MenuIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      })), React.createElement(Typography, {\n        className: classes.title,\n        variant: \"h4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, title), React.createElement(IconButton, {\n        className: classes.notificationsButton,\n        onClick: this.handleShowNotifications,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(Badge, {\n        badgeContent: notificationsCount,\n        color: \"primary\",\n        variant: \"dot\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(NotificationsIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }))), React.createElement(IconButton, {\n        className: classes.signOutButton,\n        onClick: this.handleSignOut,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(SignoutIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      })))), React.createElement(Popover, {\n        anchorEl: notificationsEl,\n        anchorOrigin: {\n          vertical: 'bottom',\n          horizontal: 'center'\n        },\n        onClose: this.handleCloseNotifications,\n        open: showNotifications,\n        transformOrigin: {\n          vertical: 'top',\n          horizontal: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, React.createElement(NotificationList, {\n        notifications: notifications,\n        onSelect: this.handleCloseNotifications,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Topbar;\n}(Component);\n\nTopbar.propTypes = {\n  className: PropTypes.string,\n  classes: PropTypes.object.isRequired,\n  history: PropTypes.object.isRequired,\n  isSidebarOpen: PropTypes.bool,\n  onToggleSidebar: PropTypes.func,\n  title: PropTypes.string\n};\nTopbar.defaultProps = {\n  onToggleSidebar: function onToggleSidebar() {}\n};\nexport default compose(withRouter, withStyles(styles))(Topbar);","map":{"version":3,"sources":["/Users/rizki/Downloads/dasboard-material/new-dashboard/src/layouts/Dashboard/components/Topbar/index.jsx"],"names":["React","Component","Fragment","withRouter","classNames","compose","PropTypes","withStyles","Badge","IconButton","Popover","Toolbar","Typography","MenuIcon","CloseIcon","NotificationsIcon","SignoutIcon","getNotifications","NotificationList","styles","Topbar","signal","state","notifications","notificationsLimit","notificationsCount","notificationsEl","handleSignOut","history","props","localStorage","setItem","push","handleShowNotifications","event","setState","currentTarget","handleCloseNotifications","classes","className","title","isSidebarOpen","onToggleSidebar","rootClassName","root","showNotifications","Boolean","toolbar","menuButton","notificationsButton","signOutButton","vertical","horizontal","propTypes","string","object","isRequired","bool","func","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport { withRouter } from 'react-router-dom';\n\n// Externals\nimport classNames from 'classnames';\nimport compose from 'recompose/compose';\nimport PropTypes from 'prop-types';\n\n// Material helpers\nimport { withStyles } from '@material-ui/core/styles';\n\n// Material components\nimport Badge from '@material-ui/core/Badge';\nimport IconButton from '@material-ui/core/IconButton';\nimport Popover from '@material-ui/core/Popover';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport CloseIcon from '@material-ui/icons/CloseOutlined';\nimport NotificationsIcon from '@material-ui/icons/NotificationsOutlined';\nimport SignoutIcon from '@material-ui/icons/ExitToAppOutlined';\n\n// Shared services\nimport { getNotifications } from 'services/notification';\n\n// Custom components\nimport NotificationList from './components/NotificationList';\n\n// Component styles\nimport styles from './styles';\n\nclass Topbar extends Component {\n  signal = true;\n\n  state = {\n    notifications: [],\n    notificationsLimit: 4,\n    notificationsCount: 0,\n    notificationsEl: null\n  };\n\n  async getNotifications() {\n    try {\n      const { notificationsLimit } = this.state;\n\n      const { notifications, notificationsCount } = await getNotifications(\n        notificationsLimit\n      );\n\n      if (this.signal) {\n        this.setState({\n          notifications,\n          notificationsCount\n        });\n      }\n    } catch (error) {\n      return;\n    }\n  }\n\n  componentDidMount() {\n    this.signal = true;\n    this.getNotifications();\n  }\n\n  componentWillUnmount() {\n    this.signal = false;\n  }\n\n  handleSignOut = () => {\n    const { history } = this.props;\n\n    localStorage.setItem('isAuthenticated', false);\n    history.push('/sign-in');\n  };\n\n  handleShowNotifications = event => {\n    this.setState({\n      notificationsEl: event.currentTarget\n    });\n  };\n\n  handleCloseNotifications = () => {\n    this.setState({\n      notificationsEl: null\n    });\n  };\n\n  render() {\n    const {\n      classes,\n      className,\n      title,\n      isSidebarOpen,\n      onToggleSidebar\n    } = this.props;\n    const { notifications, notificationsCount, notificationsEl } = this.state;\n\n    const rootClassName = classNames(classes.root, className);\n    const showNotifications = Boolean(notificationsEl);\n\n    return (\n      <Fragment>\n        <div className={rootClassName}>\n          <Toolbar className={classes.toolbar}>\n            <IconButton\n              className={classes.menuButton}\n              onClick={onToggleSidebar}\n              variant=\"text\"\n            >\n              {isSidebarOpen ? <CloseIcon /> : <MenuIcon />}\n            </IconButton>\n            <Typography\n              className={classes.title}\n              variant=\"h4\"\n            >\n              {title}\n            </Typography>\n            <IconButton\n              className={classes.notificationsButton}\n              onClick={this.handleShowNotifications}\n            >\n              <Badge\n                badgeContent={notificationsCount}\n                color=\"primary\"\n                variant=\"dot\"\n              >\n                <NotificationsIcon />\n              </Badge>\n            </IconButton>\n            <IconButton\n              className={classes.signOutButton}\n              onClick={this.handleSignOut}\n            >\n              <SignoutIcon />\n            </IconButton>\n          </Toolbar>\n        </div>\n        <Popover\n          anchorEl={notificationsEl}\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'center'\n          }}\n          onClose={this.handleCloseNotifications}\n          open={showNotifications}\n          transformOrigin={{\n            vertical: 'top',\n            horizontal: 'center'\n          }}\n        >\n          <NotificationList\n            notifications={notifications}\n            onSelect={this.handleCloseNotifications}\n          />\n        </Popover>\n      </Fragment>\n    );\n  }\n}\n\nTopbar.propTypes = {\n  className: PropTypes.string,\n  classes: PropTypes.object.isRequired,\n  history: PropTypes.object.isRequired,\n  isSidebarOpen: PropTypes.bool,\n  onToggleSidebar: PropTypes.func,\n  title: PropTypes.string\n};\n\nTopbar.defaultProps = {\n  onToggleSidebar: () => {}\n};\n\nexport default compose(\n  withRouter,\n  withStyles(styles)\n)(Topbar);\n"]},"metadata":{},"sourceType":"module"}